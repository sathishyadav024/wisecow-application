name: CI/CD Pipeline (Build, Push to Docker Hub, and Deploy to Kubernetes)

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/wisecow-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Install aws-iam-authenticator
        run: |
          curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.14.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
          chmod +x aws-iam-authenticator
          sudo mv aws-iam-authenticator /usr/local/bin/

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Create TLS secret
        run: |
          echo "${{ secrets.TLS_CERTIFICATE }}" | base64 --decode > fullchain.pem
          echo "${{ secrets.TLS_PRIVATE_KEY }}" | base64 --decode > privkey.pem
          kubectl create secret tls your-tls-secret-name \
            --cert=fullchain.pem \
            --key=privkey.pem \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy application
        run: |
          kubectl apply -f /deployment.yaml
          kubectl apply -f /service.yaml
